// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassportMvcCoreCRUD.Areas.Identity.Data;

#nullable disable

namespace PassportMvcCoreCRUD.Migrations
{
    [DbContext(typeof(PassportMvcCoreCRUDContext))]
    [Migration("20220713065132_PassportCoreDB")]
    partial class PassportCoreDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Areas.Identity.Data.PassportMvcCoreCRUDUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass1", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("app_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applying")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("booklet_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ex_reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("other_reason1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("re_reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("validity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s1");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass2", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("aadhar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birth_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birth_district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birth_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birth_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("changes_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_select")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("edu_qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_org_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gov_servant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marital_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mark_select")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("non_ecr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("other_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pan_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("voter_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s2");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass3", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("father_middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_passport_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guardian_middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guardian_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guardian_surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_passport_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pass_file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spouse_middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spouse_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spouse_surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s3");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass4", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("police_station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("same_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s4");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass5", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("em_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("em_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("em_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s5");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass6", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("certi_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expiry_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("issue_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("issue_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("month_year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("not_issued_pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pass_office")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s6");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass7", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("od1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od10")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od11")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od12")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od13")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od14")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od14_sub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od15")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od15_sub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od8")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("od9")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s7");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass8", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dd_exp_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dd_issue_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dd_num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s8");
                });

            modelBuilder.Entity("PassportMvcCoreCRUD.Models.Pass9", b =>
                {
                    b.Property<string>("file_num")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("en_file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sd_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sd_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sd_sign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_num");

                    b.ToTable("s9");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PassportMvcCoreCRUD.Areas.Identity.Data.PassportMvcCoreCRUDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PassportMvcCoreCRUD.Areas.Identity.Data.PassportMvcCoreCRUDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PassportMvcCoreCRUD.Areas.Identity.Data.PassportMvcCoreCRUDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PassportMvcCoreCRUD.Areas.Identity.Data.PassportMvcCoreCRUDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
